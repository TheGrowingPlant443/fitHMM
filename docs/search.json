[{"path":[]},{"path":"/articles/fitHMM.html","id":"hidden-markov-models","dir":"Articles","previous_headings":"","what":"Hidden Markov Models","title":"fitHMM","text":"hidden Markov model (HMM) simple flexible model data serial dependence consists two parts, observed sequence, denote \\(X_1,\\dots,X_T\\), hidden sequence, denote \\(C_1,\\dots, C_T\\). assumed hidden sequence constitutes first order homogeneous Markov chain finite state space \\(\\{1,\\dots,m\\}\\), .e. \\[ P(C_t = j\\;\\vert\\;C_1 = i_1,\\dots, C_{t-2}=i_{t-2}, C_{t-1} = ) = P(C_t=j\\;\\vert\\; C_{t-1} = ) = \\gamma_{ij}, \\] \\(,i_1,\\dots,i_{t-1}\\\\{1,\\dots,m\\}\\) \\(t\\\\{2,\\dots,T\\}\\). initial distribution Markov chain, .e. distribution \\(C_1\\), described initial probabilities: \\[ P(C_1 = ) = \\delta_i, \\] \\(\\\\{1,\\dots,m\\}\\). Furthermore, assume \\[ P(X_t=x\\;\\vert\\; X_1=x_1,\\dots, X_{t-1}=x_{t-1}, C_1=i_1,\\dots,C_{t-1}=i_{t-1}, C_t=) = P(X_1=x\\;\\vert\\; C_t=) = p_i(x), \\] \\(x_1,\\dots,x_{t-1},x\\), \\(i_1,\\dots,i_{t-1},\\\\{1,\\dots,m\\}\\), \\(t\\\\{1,\\dots,T\\}\\). can depicted following graph structure: \\[ \\begin{matrix} C_1 & \\rightarrow & C_2 & \\rightarrow & \\cdots & \\rightarrow C_{T-1} & \\rightarrow & C_T\\\\ \\downarrow & & \\downarrow & & & \\downarrow & & \\downarrow \\\\ X_1 & & X_2 & & & X_{T-1} & & X_T \\end{matrix} \\]","code":""},{"path":"/articles/fitHMM.html","id":"calculating-the-likelihood","dir":"Articles","previous_headings":"Hidden Markov Models","what":"Calculating the Likelihood","title":"fitHMM","text":"Due dependence structure HMM, likelihood can calculated \\[ L(\\theta) = \\sum_{c_1=1}^m\\cdots\\sum_{c_T=1}^m\\delta_{c_1}p_{c_1}(x_1)\\prod_{t=2}^T(\\gamma_{c_{t-1}c_t}p_{c_t}(x_t)). \\] Despite \\(m^T\\)-terms, possible calculate simpler way using forward algorithm. involves calculating forward probabilities \\[ \\alpha_t() = P(c_t=,x_1,\\dots,x_t), \\] via recursion \\[ \\alpha_1(j) = \\delta_jp_j(x_1), \\quad\\text{}\\quad \\alpha_{t+1}(j) = \\sum_{=1}^m \\alpha_t()\\gamma_{ij}p_j(x_{t+1}). \\] likelihood can calculated \\[ L(\\theta) = \\sum_{=1}^m\\alpha_T(). \\]","code":""},{"path":"/articles/fitHMM.html","id":"estimating-parameters","dir":"Articles","previous_headings":"Hidden Markov Models","what":"Estimating Parameters","title":"fitHMM","text":"likelihood can evaluated, possible estimate parameters HMM, .e. transition probabilities, initial distribution, parameters emission distributions. Note initial distribution straightforward estimate, since one data point available. Thus sometimes assumed hidden Markov chain starts stationary distribution. package, two methods estimation used. first perhaps simple approach use numerical maximization likelihood function estimate parameters. approach yields approximate maximum likelihood estimates, quality results can depend quite bit initial values selected. second approach use Expectation Maximization (EM) algorithm, general can used find approximate maximum likelihood estimates missing data problems. can applied HMM thinking hidden Markov chain missing data. HMM set-, EM algorithm also know Baum-Welch algorithm. algorithm iteratively updates parameter estimates two steps convergence reached. First, initial parameter values \\(\\theta_0\\) selected. Denote \\(\\theta_t\\) parameter estimates \\(t\\)’th round algorithm. first step, called E-step, \\((t+1)\\)’th iteration, expectation \\(\\theta_t\\) log likelihood conditioned observed data calculated, \\[ Q(\\theta\\vert\\theta_t) = E_{\\theta_t}[\\log L(\\theta\\vert X,C)\\vert X=x]. \\] second step, called M-step, \\((t+1)\\)’th iteration, update parameter estimates, \\[ \\theta_{t+1} = \\arg\\max_{\\theta}Q(\\theta\\vert\\theta_t). \\] , results may vary depending choice initial parameters.","code":""},{"path":"/articles/fitHMM.html","id":"the-fithmm-package","dir":"Articles","previous_headings":"","what":"The fitHMM Package","title":"fitHMM","text":"fitHMM package made work hidden Markov models, can used e.g. fitting, decoding, forecasting, model checking, . building blocks fitHMM HMM xHMM objects, contain specification parameters HMM. used specify initial parameters fitting, keep approximate maximum likelihood functions fitting. HMM class can used HMMs Poisson, Bernoulli, Normal emission distributions. EM estimation supported. xHMM class flexible, also requires slightly user specification. supports emission distribution parameters either real, positive probabilities. numerical estimation provided.","code":"library(fitHMM)"},{"path":"/articles/fitHMM.html","id":"working-with-hmm-objects","dir":"Articles","previous_headings":"The fitHMM Package","what":"Working with HMM Objects","title":"fitHMM","text":"example consider Poisson2State data set, included package. simulated two-state Poisson distribution. Ignoring , like work HMM data, using knowledge working unbounded count data, thus try Poisson distribution HMM. Using HMM-function, construct HMM containing initial parameters. Using EM-algorithm, fit parameters. Note, initial parameter guesses way , calling HMM_EM might give error. happens, try initial parameters. working Poisson, Bernoulli, Normal HMMs, function Nstate_HMM can also useful. fits HMM model without us provide initial parameter guesses. Likewise, can used fit three-state Poisson HMM data. order check Poisson HMMs fits model best, compare AIC BIC Poisson-HMMs difference state space sizes. Poisson emission distributions (Bernoulli, Normal), nice plot can made using Nstates_AICBIC.  AIC BIC clearly prefer two-state model (makes sense, since true model). Due , choose work two-state Poisson model, fitted_hmm. can use Viterbi decoding find probable sequence hidden states emitted observed sequence x. Using , can make following plot, horizontal lines indicate estimated rates: Alternatively, can try local decoding. can done using Local_decoding. see two decodings generally concur, except three time points.","code":"x <- fitHMM::Poisson2State t <- length(x) initial_hmm <- HMM(\"Poisson\",               emis_param = list(lambda = c(5, 15)),               initial_probs = c(0.1, 0.9),               TPM = rbind(c(0.5, 0.5), c(0.5, 0.5))) fitted_hmm <- HMM_EM(initial_hmm, x) fitted_hmm #> ## Emission distribution: Poisson  #> ## Distribution Parameters for emission probability:  9.6837 19.63486  #> ## Start Probability for the n-states:  2.264111e-28 1  #> ## Number of hidden states:  2  #> ## Class PoissonHMM HMM  #> ## Transition Probability Matrix  #>           [,1]      [,2] #> [1,] 0.5948173 0.4051827 #> [2,] 0.2918468 0.7081532 #>  #> ## Probability to go from, 1 state to 1 state:  0.594817291346773  #> ## Probability to go from, 2 state to 1 state:  0.291846759828578  #> ## Probability to go from, 1 state to 2 state:  0.405182708653227  #> ## Probability to go from, 2 state to 2 state:  0.708153240171422 Nstate_HMM(\"Poisson\", x, nstates = 2) #> ## Emission distribution: Poisson  #> ## Distribution Parameters for emission probability:  9.683895 19.63505  #> ## Start Probability for the n-states:  7.251213e-18 1  #> ## Number of hidden states:  2  #> ## Class PoissonHMM HMM  #> ## Transition Probability Matrix  #>           [,1]      [,2] #> [1,] 0.5948279 0.4051721 #> [2,] 0.2918624 0.7081376 #>  #> ## Probability to go from, 1 state to 1 state:  0.594827917895526  #> ## Probability to go from, 2 state to 1 state:  0.291862363670113  #> ## Probability to go from, 1 state to 2 state:  0.405172082104474  #> ## Probability to go from, 2 state to 2 state:  0.708137636329887 Nstate_HMM(\"Poisson\", x, nstates = 3) #> ## Emission distribution: Poisson  #> ## Distribution Parameters for emission probability:  9.702382 19.15283 19.81374  #> ## Start Probability for the n-states:  0 1 0  #> ## Number of hidden states:  3  #> ## Class PoissonHMM HMM  #> ## Transition Probability Matrix  #>             [,1]         [,2]         [,3] #> [1,] 0.598187931 7.647816e-02 3.253339e-01 #> [2,] 0.999985872 1.412743e-05 3.433706e-10 #> [3,] 0.005446525 3.054377e-01 6.891158e-01 #>  #> ## Probability to go from, 1 state to 1 state:  0.598187930753681  #> ## Probability to go from, 2 state to 1 state:  0.9999858722316  #> ## Probability to go from, 3 state to 1 state:  0.00544652490174731  #> ## Probability to go from, 1 state to 2 state:  0.0764781598868855  #> ## Probability to go from, 2 state to 2 state:  1.41274250296507e-05  #> ## Probability to go from, 3 state to 2 state:  0.305437716773009  #> ## Probability to go from, 1 state to 3 state:  0.325333909359433  #> ## Probability to go from, 2 state to 3 state:  3.43370644967691e-10  #> ## Probability to go from, 3 state to 3 state:  0.689115758325244 Nstates_AICBIC(\"Poisson\", x, nstates = 5) #>   NoStates      AIC      BIC #> 1        2 629.5371 639.9578 #> 2        3 638.9975 662.4441 #> 3        4 647.6202 689.3029 #> 4        5 655.9359 721.0652 decode_global <- Viterbi(fitted_hmm, x) decode_global #>   [1] 2 1 1 1 2 1 2 2 2 2 2 1 2 2 2 1 1 1 1 1 1 1 2 2 2 2 2 1 1 2 2 2 1 1 2 1 1 #>  [38] 1 1 2 2 1 2 1 1 1 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 1 1 1 1 2 1 1 2 2 2 2 2 #>  [75] 2 2 2 2 1 1 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 1 2 2 2 decode_local <- Local_decoding(fitted_hmm, x)$Local_decoding_index which(decode_global != decode_local) #> [1] 61 78 84"},{"path":"/articles/fitHMM.html","id":"working-with-xhmm-objects","dir":"Articles","previous_headings":"The fitHMM Package","what":"Working with xHMM Objects","title":"fitHMM","text":"Like HMM objects consider included data set package, one called Nbinom2State, simulated two-state negative binomial distribution. Using xHMM function initial model specified setting distribution function specifying domains parameters emis_paramspace, otherwise parameters specified . Using nonlinear maximization algorithm nlm_hmm parameters can fitted. (remark suppressWarnings called function , make output readable) xHMM objects fit model can checked using function AICBIC. Remark decoding functions Viterbi Local_decoding work exactly like case HMM object.","code":"x_nbinom <- fitHMM::Nbinom2State initial_xhmm <- xHMM(dnbinom,                     emis_param = list(size = c(20, 30), prob=c(.5,.5)),                     emis_paramspace = list(size=\"pos_real\", prob=\"prob\"),                     initial_probs = c(0.1, 0.9),                     TPM = rbind(c(0.5, 0.5), c(0.5, 0.5))) initial_xhmm #> ## Emission distribution:  #> ## Distribution Parameters for emission probability:  20 30 0.5 0.5  #> ## Start Probability for the n-states:  0.1 0.9  #> ## Number of hidden states:  2  #> ## The value set of Distribution Parameters :  pos_real prob  #> ## Class xHMM  #>  #> ## Transition Probability Matrix  #>      [,1] [,2] #> [1,]  0.5  0.5 #> [2,]  0.5  0.5 #>  #> ## Probability to go from, 1 state to 1 state:  0.5  #> ## Probability to go from, 2 state to 1 state:  0.5  #> ## Probability to go from, 1 state to 2 state:  0.5  #> ## Probability to go from, 2 state to 2 state:  0.5 fitted_xhmm <- suppressWarnings(nlm_hmm(initial_xhmm, x_nbinom)) fitted_xhmm #> ## Emission distribution:  #> ## Distribution Parameters for emission probability:  10.71986 91.21169 0.2426227 0.2775183  #> ## Start Probability for the n-states:  2.074865e-07 0.9999998  #> ## Number of hidden states:  2  #> ## The value set of Distribution Parameters :  pos_real prob  #> ## Class xHMM  #>  #> ## Transition Probability Matrix  #>           [,1]      [,2] #> [1,] 0.6341469 0.3658531 #> [2,] 0.2586202 0.7413798 #>  #> ## Probability to go from, 1 state to 1 state:  0.634146888264777  #> ## Probability to go from, 2 state to 1 state:  0.258620196686465  #> ## Probability to go from, 1 state to 2 state:  0.365853111735222  #> ## Probability to go from, 2 state to 2 state:  0.741379803313535 AICBIC(fitted_xhmm, x_nbinom) #> $AIC #> [1] 1012.783 #>  #> $BIC #> [1] 1028.415"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pi Vejsig Madsen. Author. Martin Christian Brodersen. Author. Thomas Kuhlwein. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Madsen PV, Brodersen MC, Kuhlwein T (2021). fitHMM: Fit Work Hidden Markov Models. R package version 0.1.0.","code":"@Manual{,   title = {fitHMM: Fit and Work with Hidden Markov Models},   author = {Pi Vejsig Madsen and Martin Christian Brodersen and Thomas Kuhlwein},   year = {2021},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"/index.html","id":"fithmm","dir":"","previous_headings":"","what":"fitHMM","title":"Fit and Work with Hidden Markov Models","text":"package meant estimate parameters Hidden Markov Models (HMM) EM-algorithm numerical optimization functions decoding forecasting. Furthermore functions evaluate fit included.","code":""},{"path":"/index.html","id":"team-roles","dir":"","previous_headings":"","what":"Team Roles","title":"Fit and Work with Hidden Markov Models","text":"Project manager: Thomas Kuhlwein Documentation manager: Pi Vejsig Quality manager: Martin Christian Brodersen","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 fitHMM authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/AICBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"AIC and BIC of Specified HMM — AICBIC","title":"AIC and BIC of Specified HMM — AICBIC","text":"calculates AIC BIC class HMM xHMM.","code":""},{"path":"/reference/AICBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AIC and BIC of Specified HMM — AICBIC","text":"","code":"AICBIC(HMM, observations)"},{"path":"/reference/AICBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AIC and BIC of Specified HMM — AICBIC","text":"HMM object class HMM xHMM, hidden Markov model. observations numeric vector containing observed data.","code":""},{"path":"/reference/AICBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AIC and BIC of Specified HMM — AICBIC","text":"list containing AIC BIC.","code":""},{"path":"/reference/Forecasting.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting Function — Forecasting","title":"Forecasting Function — Forecasting","text":"Calculate probability seeing value state time  T + Steps, T length observed sequence.","code":""},{"path":"/reference/Forecasting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting Function — Forecasting","text":"","code":"Forecasting(HMM, observations, steps = 1)"},{"path":"/reference/Forecasting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting Function — Forecasting","text":"HMM specified hidden Markov model using function HMM observations Data steps Number steps","code":""},{"path":"/reference/Forecasting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting Function — Forecasting","text":"Vector probability state","code":""},{"path":"/reference/ForwardBackwardAlgorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","title":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","text":"Runs forward backward algorithm HMM observation calculate forward backward probabilities.","code":""},{"path":"/reference/ForwardBackwardAlgorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","text":"","code":"ForwardBackwardAlgorithm(HMM, observations)"},{"path":"/reference/ForwardBackwardAlgorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","text":"HMM object class HMM xHMM containing parameters HMM. observations numeric vector observations.","code":""},{"path":"/reference/ForwardBackwardAlgorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","text":"Returns list elements: Alpha matrix containing forward probabilities time along columns hidden states along rows. Alpha_scaled contains scaled version forward probabilities. Beta matrix containing backward probabilities time along columns hidden states along rows. Beta_scaled contains scaled version backward probabilities. Likelihood_forw numeric containing likelihood function evaluated observation parameters HMM. Computed using forward probabilities. Likelihood_back numeric containing likelihood function evaluated observation parameters HMM. Computed using backward probabilities. P_mat matrix containing state probabilities time along columns hidden states along rows.","code":""},{"path":"/reference/ForwardBackwardAlgorithm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forward and Backward Algorithm for HMMs — ForwardBackwardAlgorithm","text":"function calculates forward probabilities, $$\\alpha_t() = P(c_t = , x_1,\\dots,x_t),$$ backward probabilities, $$\\beta_t() = P(x_{t+1},\\dots,x_T\\vert c_t=) \\quad t=1,\\dots,T-1,$$ \\(x_1,\\dots,x_T\\) denotes observed sequence \\(c_1,\\dots,c_T\\) denotes hidden Markov chain. forward backward probabilities can used calculate likelihood function state probabilities, .e. \\(P(c_t=\\vert x)\\).","code":""},{"path":"/reference/HMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Hidden Markov Models — HMM","title":"Hidden Markov Models — HMM","text":"Creates object class HMM containing parameters hidden Markov model standard emission distribution.","code":""},{"path":"/reference/HMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hidden Markov Models — HMM","text":"","code":"HMM(distribution, emis_param, initial_probs, TPM)"},{"path":"/reference/HMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hidden Markov Models — HMM","text":"distribution character length one specifying emission distribution, must one following: \"Poisson\", \"Bernoulli\", \"Normal\". emis_param parameters emission distribution. \"Poisson\": must numeric vector list length one containing rates. \"Bernoulli\": must numeric vector list length one containing probabilities. \"Normal\": must list two elements named \"mean\" \"sd\". initial_probs probability vector initial distribution hidden Markov chain. TPM transition probability matrix hidden Markov chain.","code":""},{"path":"/reference/HMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hidden Markov Models — HMM","text":"HMM returns object class c(\"PoissonHMM\", \"HMM\"), c(\"BernoulliHMM\", \"HMM\"), c(\"NormalHMM\", \"HMM\"). object class HMM list containing following elements: nstates numeric length one. size hidden state space. distribution character length one. emission distribution. emis_param list containing parameters emission distribution named accordance parameter names used base R's functions probability distributions. initial_probs numeric vector length nstates. initial probabilities hidden Markov chain. TPM square matrix dimension nstates. transition probabilities hidden Markov chain.","code":""},{"path":"/reference/HMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hidden Markov Models — HMM","text":"object class HMM also subclass, either PoissonHMM, BernoulliHMM, NormalHMM depending emission distribution specified distribution.","code":""},{"path":[]},{"path":"/reference/HMM_EM.html","id":null,"dir":"Reference","previous_headings":"","what":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","title":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","text":"EM-algorithm objects class HMM.","code":""},{"path":"/reference/HMM_EM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","text":"","code":"HMM_EM(HMM, ...)  ## S3 methods for PoissonHMM, BernoulliHMM, NormalHMM: HMM_EM(HMM, observations, ...)"},{"path":"/reference/HMM_EM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","text":"HMM object class HMM containing model initial parameters. observations numeric vector containing observed sequence.","code":""},{"path":"/reference/HMM_EM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","text":"Returns object class HMM containing estimated parameters.","code":""},{"path":"/reference/HMM_EM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expectation Maximization Algorithm for HMM Objects — HMM_EM","text":"EM-algorithm, also called Baum-Welch algorithm HMM context, can used find approximate maximum likelihood estimates parameters. desired model, .e. number hidden states emission distribution, specified HMM, contains specification along initial parameters EM-algorithm.","code":""},{"path":[]},{"path":"/reference/is.BernoulliHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Checking for BernoulliHMM — is.BernoulliHMM","title":"Class Checking for BernoulliHMM — is.BernoulliHMM","text":"Checks whether object inherits class BernoulliHMM.","code":""},{"path":"/reference/is.BernoulliHMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Checking for BernoulliHMM — is.BernoulliHMM","text":"","code":"is.BernoulliHMM(obj)"},{"path":[]},{"path":"/reference/is.HMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Checking for HMM — is.HMM","title":"Class Checking for HMM — is.HMM","text":"Checks whether object inherits class HMM.","code":""},{"path":"/reference/is.HMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Checking for HMM — is.HMM","text":"","code":"is.HMM(obj)"},{"path":[]},{"path":"/reference/is.NormalHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Checking for NormalHMM — is.NormalHMM","title":"Class Checking for NormalHMM — is.NormalHMM","text":"Checks whether object inherits class NormalHMM.","code":""},{"path":"/reference/is.NormalHMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Checking for NormalHMM — is.NormalHMM","text":"","code":"is.NormalHMM(obj)"},{"path":[]},{"path":"/reference/is.PoissonHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Checking for PoissonHMM — is.PoissonHMM","title":"Class Checking for PoissonHMM — is.PoissonHMM","text":"Checks whether object inherits class PoissonHMM.","code":""},{"path":"/reference/is.PoissonHMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Checking for PoissonHMM — is.PoissonHMM","text":"","code":"is.PoissonHMM(obj)"},{"path":[]},{"path":"/reference/is.xHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Checking for xHMM — is.xHMM","title":"Class Checking for xHMM — is.xHMM","text":"Checks whether object inherits class xHMM.","code":""},{"path":"/reference/is.xHMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Checking for xHMM — is.xHMM","text":"","code":"is.xHMM(obj)"},{"path":[]},{"path":"/reference/Local_decoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Decoding — Local_decoding","title":"Local Decoding — Local_decoding","text":"Calculate probability state time time T.","code":""},{"path":"/reference/Local_decoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Decoding — Local_decoding","text":"","code":"Local_decoding(HMM, observations)"},{"path":"/reference/Local_decoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local Decoding — Local_decoding","text":"HMM specified hidden Markov model using function HMM xHMM observations Data","code":""},{"path":"/reference/Local_decoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local Decoding — Local_decoding","text":"Vector probability state","code":""},{"path":"/reference/Local_decoding_with_scaling.html","id":null,"dir":"Reference","previous_headings":"","what":"Local_decoding_with_scaling — Local_decoding_with_scaling","title":"Local_decoding_with_scaling — Local_decoding_with_scaling","text":"Calculate probability state time time T scaling.","code":""},{"path":"/reference/Local_decoding_with_scaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local_decoding_with_scaling — Local_decoding_with_scaling","text":"","code":"Local_decoding_with_scaling(HMM, observations)"},{"path":"/reference/Local_decoding_with_scaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local_decoding_with_scaling — Local_decoding_with_scaling","text":"HMM specified hidden Markov model using function HMM xHMM observations Data","code":""},{"path":"/reference/Local_decoding_with_scaling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local_decoding_with_scaling — Local_decoding_with_scaling","text":"Vector probability state scaling","code":""},{"path":"/reference/Nbinom2State.html","id":null,"dir":"Reference","previous_headings":"","what":"Nbinom2State Dataset — Nbinom2State","title":"Nbinom2State Dataset — Nbinom2State","text":"observation length 100 simulated two-state negative binomial HMM.","code":""},{"path":"/reference/Nbinom2State.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nbinom2State Dataset — Nbinom2State","text":"","code":"Nbinom2State"},{"path":"/reference/Nbinom2State.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Nbinom2State Dataset — Nbinom2State","text":"numeric vector length 100.","code":""},{"path":"/reference/Nbinom2State.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nbinom2State Dataset — Nbinom2State","text":"data simulated parameters: sizes: 10, 100 probs: 0.25, 0.30 initial probability state one: 0.5 transition probability one one: 0.6 transition probability two two: 0.8","code":""},{"path":"/reference/nlm_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Numeric Parameter Estimation of HMM — nlm_hmm","title":"Numeric Parameter Estimation of HMM — nlm_hmm","text":"Uses nlm minimize negative log likelihood HMM, corresponds find parameters maximizing likelihood.","code":""},{"path":"/reference/nlm_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numeric Parameter Estimation of HMM — nlm_hmm","text":"","code":"nlm_hmm(HMM, observations)"},{"path":"/reference/nlm_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numeric Parameter Estimation of HMM — nlm_hmm","text":"HMM object class xHMM containing initial parameters. observations numeric vector containing observed sequence.","code":""},{"path":"/reference/nlm_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numeric Parameter Estimation of HMM — nlm_hmm","text":"Returns new object class xHMM fitted observations according non-linear minimization approach.","code":""},{"path":"/reference/Nstates_AICBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating AIC and BIC for Different State Space Sizes — Nstates_AICBIC","title":"Calculating AIC and BIC for Different State Space Sizes — Nstates_AICBIC","text":"Calculating AIC BIC Different State Space Sizes","code":""},{"path":"/reference/Nstates_AICBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating AIC and BIC for Different State Space Sizes — Nstates_AICBIC","text":"","code":"Nstates_AICBIC(distribution = \"Normal\", data, nstates = 3, doplot = \"ggplot\")"},{"path":"/reference/Nstates_AICBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating AIC and BIC for Different State Space Sizes — Nstates_AICBIC","text":"distribution character length one specifying emission distribution, must one following: \"Poisson\", \"Bernoulli\", \"Normal\". data numeric vector containing observed data. nstates number states function fit using function nstates_HMM. .e. nstates=5 data fit AIC BIC calculated states 2 5. doplot can specified either \"ggplot\" \"base\" according plot wanted. otherwise plot made.","code":""},{"path":"/reference/Nstates_AICBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating AIC and BIC for Different State Space Sizes — Nstates_AICBIC","text":"Returns data.frame containing AIC BIC HMM specified distribution stationary initial distribution hidden Markov chain, fitted data 2 states nstatesstates. Furthermore plot created accordance specified doplot.","code":""},{"path":"/reference/Nstate_HMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit n-State HMM — Nstate_HMM","title":"Fit n-State HMM — Nstate_HMM","text":"Fit HMM standard emission distribution specified number hidden states.","code":""},{"path":"/reference/Nstate_HMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit n-State HMM — Nstate_HMM","text":"","code":"Nstate_HMM(distribution = \"Normal\", data, nstates = 2)"},{"path":"/reference/Nstate_HMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit n-State HMM — Nstate_HMM","text":"distribution character length one specifying emission distribution, must one following: \"Poisson\", \"Bernoulli\", \"Normal\". data numeric vector containing observed data. nstates numeric length one, size hidden state space.","code":""},{"path":"/reference/Nstate_HMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit n-State HMM — Nstate_HMM","text":"Returns object class HMM containing parameter estimates fitted model.","code":""},{"path":"/reference/Nstate_HMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit n-State HMM — Nstate_HMM","text":"Nstate_HMM calls HMM_EM initial parameters chosen using summary statistics data.","code":""},{"path":[]},{"path":"/reference/Poisson2State.html","id":null,"dir":"Reference","previous_headings":"","what":"Poisson2State Dataset — Poisson2State","title":"Poisson2State Dataset — Poisson2State","text":"observation length 100 simulated two-state Poisson HMM.","code":""},{"path":"/reference/Poisson2State.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poisson2State Dataset — Poisson2State","text":"","code":"Poisson2State"},{"path":"/reference/Poisson2State.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poisson2State Dataset — Poisson2State","text":"numeric vector length 100.","code":""},{"path":"/reference/Poisson2State.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Poisson2State Dataset — Poisson2State","text":"data simulated parameters: rates: 10, 20 initial probability state one: 0.5 transition probability one one: 0.6 transition probability two two: 0.8","code":""},{"path":"/reference/State_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"State Prediction Function — State_prediction","title":"State Prediction Function — State_prediction","text":"Calculates probability hidden state time  T + steps, T length observed sequence, .e.  future hidden states probability.","code":""},{"path":"/reference/State_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State Prediction Function — State_prediction","text":"","code":"State_prediction(HMM, observations, steps = 1)"},{"path":"/reference/State_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"State Prediction Function — State_prediction","text":"HMM object class HMM xHMM. observations numeric vector containing observed sequence. steps Numeric length 1, number steps.","code":""},{"path":"/reference/State_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"State Prediction Function — State_prediction","text":"Vector probabilities hidden state steps-time units future.","code":""},{"path":"/reference/Stationary.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Stationary Distribution of HMM — Stationary","title":"Find Stationary Distribution of HMM — Stationary","text":"Find Stationary Distribution HMM","code":""},{"path":"/reference/Stationary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Stationary Distribution of HMM — Stationary","text":"","code":"Stationary(HMM)"},{"path":"/reference/Stationary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Stationary Distribution of HMM — Stationary","text":"HMM HMM xHMM object determine stationary distribution .","code":""},{"path":"/reference/Stationary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Stationary Distribution of HMM — Stationary","text":"HMM xHMM object identical input except initial_probs parameter changed stationary distribution (hidden) Markov chain.","code":""},{"path":"/reference/Viterbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Viterbi Decoding for HMM Objects — Viterbi","title":"Viterbi Decoding for HMM Objects — Viterbi","text":"Generic function performing Viterbi, .e. global, decoding HMM observed sequence said HMM.","code":""},{"path":"/reference/Viterbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viterbi Decoding for HMM Objects — Viterbi","text":"","code":"Viberbi(HMM_obj, ...)  ## S3 methods for PoissonHMM, BernoulliHMM, NormalHMM, xHMM: Viterbi(HMM_obj, obs, ...)"},{"path":"/reference/Viterbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Viterbi Decoding for HMM Objects — Viterbi","text":"HMM_obj object class HMM xHMM. obs numeric vector containing observed sequence.","code":""},{"path":"/reference/Viterbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Viterbi Decoding for HMM Objects — Viterbi","text":"Returns numeric vector containing predicted hidden states emitted observed sequence obs. hidden states numbered according order emission parameters HMM_obj$emis_param.","code":""},{"path":"/reference/Viterbi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Viterbi Decoding for HMM Objects — Viterbi","text":"Viterbi decoding finds probable sequence hidden states given observed sequence obs. function uses scaling avoid underflow.","code":""},{"path":"/reference/xHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Hidden Markov Models — xHMM","title":"Hidden Markov Models — xHMM","text":"Creates object class xHMM containing parameters hidden Markov model (HMM) user specified emission distribution.","code":""},{"path":"/reference/xHMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hidden Markov Models — xHMM","text":"","code":"xHMM(distribution, emis_param, emis_paramspace, initial_probs, TPM)"},{"path":"/reference/xHMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hidden Markov Models — xHMM","text":"distribution function, pdf pmf emission distribution. emis_param parameters emission distribution. emis_paramspace list containing parameter spaces emission parameters. Elements named according argument name distribution contain precisely one characters: \"real\", \"pos_real\", \"prob\" initial_probs probability vector initial distribution hidden Markov chain. TPM transition probability matrix hidden Markov chain.","code":""},{"path":"/reference/xHMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hidden Markov Models — xHMM","text":"xHMM returns object class xHMM. object class xHMM list containing following elements: nstates numeric length one. size hidden state space. distribution function. emission distribution. emis_param list containing parameters emission distribution named accordance parameter names used arguments distribution. emis_paramspace list containing parameter spaces emission parameters. Elements named according argument name distribution. initial_probs numeric vector length nstates. initial probabilities hidden Markov chain. TPM square matrix dimension nstates. transition probabilities hidden Markov chain.","code":""},{"path":[]}]
